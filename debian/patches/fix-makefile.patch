Stops make from building with docker and removes some emscripten
flags that are not available in the Debian version.
--- a/Makefile
+++ b/Makefile
@@ -3,7 +3,8 @@
 EMSDK_VERSION=3.1.35
 EMSDK_DOCKER_IMAGE=emscripten/emsdk:3.1.35
 EMCC=EMSDK_VERSION=$(EMSDK_VERSION) EMSDK_DOCKER_IMAGE=$(EMSDK_DOCKER_IMAGE) EMSDK_DOCKER_CACHE=$(THIS_DIR)/emsdk-cache/$(EMSDK_VERSION) scripts/emcc.sh
-GENERATE_TS=$(VARIANT_GENERATE_TS_ENV) npx ts-node generate.ts
+EMCC=emcc
+GENERATE_TS=$(VARIANT_GENERATE_TS_ENV) ts-node generate.ts
 PRETTIER=npx prettier
 THIS_DIR := $(dir $(abspath $(firstword $(MAKEFILE_LIST))))
 
@@ -62,7 +63,7 @@
 CFLAGS_WASM+=-s INVOKE_RUN=0
 CFLAGS_WASM+=-s ALLOW_MEMORY_GROWTH=1
 CFLAGS_WASM+=-s ALLOW_TABLE_GROWTH=1
-CFLAGS_WASM+=-s STACK_SIZE=5MB
+# CFLAGS_WASM+=-s STACK_SIZE=5MB
 # CFLAGS_WASM+=-s MINIMAL_RUNTIME=1 # Appears to break MODULARIZE
 CFLAGS_WASM+=-s SUPPORT_ERRNO=0
 
@@ -71,14 +72,14 @@
 # CFLAGS_WASM+=-s STRICT_JS=1 # Doesn't work with MODULARIZE
 CFLAGS_WASM+=-s IGNORE_MISSING_MAIN=0 --no-entry
 CFLAGS_WASM+=-s AUTO_JS_LIBRARIES=0
-CFLAGS_WASM+=-s -lccall.js
+# CFLAGS_WASM+=-s -lccall.js
 CFLAGS_WASM+=-s AUTO_NATIVE_LIBRARIES=0
 CFLAGS_WASM+=-s AUTO_ARCHIVE_INDEXES=0
 CFLAGS_WASM+=-s DEFAULT_TO_CXX=0
 CFLAGS_WASM+=-s ALLOW_UNIMPLEMENTED_SYSCALLS=0
 
 # Emscripten options - NodeJS
-CFLAGS_WASM+=-s MIN_NODE_VERSION=160000
+# CFLAGS_WASM+=-s MIN_NODE_VERSION=160000
 CFLAGS_WASM+=-s NODEJS_CATCH_EXIT=0
 
 # Empscripten options for asyncify variant
@@ -96,7 +97,7 @@
 CFLAGS_RELEASE+=-flto
 
 CFLAGS_WASM_RELEASE+=-s SINGLE_FILE=1
-CFLAGS_WASM_RELEASE+=--closure 1
+# CFLAGS_WASM_RELEASE+=--closure 1
 CFLAGS_WASM_RELEASE+=-s FILESYSTEM=0
 
 # Debug options
@@ -137,8 +138,8 @@
 all: $(VARIANTS)
 dist: wasm tsconfig.json
 	rm -rf dist
-	yarn run tsc
-	cp -v ts/generated/*.wasm ts/generated/*.wasm.map dist/generated
+	tsc
+	# cp -v ts/generated/*.wasm ts/generated/*.wasm.map dist/generated
 
 .PHONY: test prettier
 test:
@@ -180,7 +181,7 @@
 # with the VARIANT= statically set so it can be used in static rule contexts.
 # I'm not good enough at Makefile to do this any other way, sorry.
 $(VARIANTS): VARIANT=$@
-$(VARIANTS): %: | emcc
+$(VARIANTS): %:
 	@$(MAKE) VARIANT=$(VARIANT) VARIANT
 
 VARIANT: $(PLATFORM)
